version: "3"

services:
  server:
    build:
      context: ./sw_core
    restart: unless-stopped
    volumes:
      - "./sw_core:/usr/src/sw_core"  # mount the source code for watching changes
      - ${CONFIG}:/etc/shopwiz_config.json:ro
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - celery_worker
      - celery_beat

  client:
    container_name: client
    build: ./sw_customer
    working_dir: /src
    ports:
      - "3000:3000"
    volumes:
      - ./sw_customer:/src
    command: >
      sh -c "npm install -g npm@latest && npm install && npm run dev"
    env_file:
      - ./.client.dev.env
    depends_on:
      - server

  db:
    image: postgres:15
    restart: unless-stopped
    volumes:
      - "postgres-data:/var/lib/postgresql/data/"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - "redis:/data"

  celery_worker:
    build:
      context: ./sw_core
    command: celery -A shop_wiz worker --loglevel=INFO
    volumes:
      - "./sw_core:/usr/src/sw_core"
      - ${CONFIG}:/etc/shopwiz_config.json:ro
    env_file:
      - .env
    depends_on:
      - redis
      - db

  celery_beat:
    build:
      context: ./sw_core
    command: celery -A shop_wiz beat --loglevel=INFO
    volumes:
      - "./sw_core:/usr/src/sw_core"
      - ${CONFIG}:/etc/shopwiz_config.json:ro
    env_file:
      - .env
    depends_on:
      - redis
      - db

volumes:
  postgres-data:
  redis: