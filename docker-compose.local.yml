version: "3"

services:
  django: &django
    build:
      context: ./sw_core
      dockerfile: ./sw_core/compose/local/django/Dockerfile
    image: sw_local_django
    container_name: sw_local_django
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    volumes:
      - ${CONFIG}:/etc/shopwiz_config.json:ro
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: sw_production_postgres
    container_name: sw_local_postgres
    restart: unless-stopped
    volumes:
      - sw_local_postgres_data:/var/lib/postgresql/data
      - sw_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  redis:
    image: docker.io/redis:6
    container_name: sw_local_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - sw_local_redis_data:/data

  celery_worker:
    <<: *django
    image: sw_local_celeryworker
    container_name: sw_local_celeryworker
    ports: []
    command: /start-celeryworker

  celery_beat:
    <<: *django
    image: sw_local_celerybeat
    container_name: sw_local_celerybeat
    ports: []
    command: /start-celerybeat

  client:
    container_name: client
    build: ./sw_customer
    working_dir: /src
    ports:
      - "3000:3000"
    volumes:
      - ./sw_customer:/src
    command: >
      sh -c "npm install -g npm@latest && npm install && npm run dev"
    env_file:
      - ./.client.dev.env
    depends_on:
      - django

volumes:
  sw_local_postgres_data: {}
  sw_local_postgres_data_backups: {}
  sw_local_redis_data: {}